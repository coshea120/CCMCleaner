<#########################################################################################################################

                                                    CCMCleaner.ps1

    This script functions to target all devices in a list of SCCM device collections, clean the CCM client from 
    those devices, and then reinstall it.

    Written By: Christian O'Shea

#########################################################################################################################>

Import-Module ActiveDirectory

$VerbosePreference = "Continue"

<#########################################################################################################################

                                                    Generated by SCCM

#########################################################################################################################>

# Site configuration
$SiteCode = "NBM" # Site code 
$ProviderMachineName = "mecmps01.newbridgehealth.org" # SMS Provider machine name

# Customizations
$initParams = @{}
#$initParams.Add("Verbose", $true) # Uncomment this line to enable verbose logging
#$initParams.Add("ErrorAction", "Stop") # Uncomment this line to stop the script on any errors

# Import the ConfigurationManager.psd1 module 
if((Get-Module ConfigurationManager) -eq $null) {
    Import-Module "$($ENV:SMS_ADMIN_UI_PATH)\..\ConfigurationManager.psd1" @initParams 
}

# Connect to the site's drive if it is not already present
if((Get-PSDrive -Name $SiteCode -PSProvider CMSite -ErrorAction SilentlyContinue) -eq $null) {
    New-PSDrive -Name $SiteCode -PSProvider CMSite -Root $ProviderMachineName @initParams
}

# Set the current location to be the site code.
Set-Location "$($SiteCode):\" @initParams


<#########################################################################################################################

                                                    Global Variables

#########################################################################################################################>

#$inclusion_list =  "ConfMgr Client with version 1902", "ConfMgr Client with version 1906" #, "Missing Client"   # For prod
$inclusion_list = 'Script Test'                                                                                # For testing

$clean_network_path = '\\issvr\Software\sccm Client\ccmclean.exe'
$setup_network_path = '\\issvr\Software\sccm Client\Client\'

$clean_cmd = 'C:\temp\ccm\ccmclean.exe'
$clean_args = '/q'

$setup_cmd = 'C:\temp\ccm\Client\ccmsetup.exe'

$creds = Get-Credential


<#########################################################################################################################

    RunOnAllComputersInCollection

    Description:
        This funtion iterates thru all of the names of devices in a given SCCM collection. For each device, the function 
        determines if the device is online, and if so, runs the specified function

    Parameters:
        $CollectionName - A string containing the name of the collection containing target devices
        $Function - The function for script block to be run on those devices

    Return Value:
        N/A

#########################################################################################################################>

function RunOnAllComputersInCollection {
    param(
        [Parameter(Mandatory=$true)]
        [String] $CollectionName,
        [Parameter(Mandatory=$true)]
        [ScriptBlock] $Function 
    )
    
    Get-CMCollectionMember -CollectionName $CollectionName | % { 

        Set-Location "C:\" @initParams
        
        if (Test-Connection -ComputerName $_.Name -Quiet) {
            $Function.Invoke($_.Name)        
        } else {
            Write-Host "RunOnAllComputersInCOllection: Unable to connect to $($_.Name) in collection $CollectionName"
        }
        Set-Location "$($SiteCode):\" @initParams
    }  
}

<#########################################################################################################################

    RemoteCCMClean

    Description:
        This funtion copies CCMClean.exe and CCMSetup files from a network folder to the target's temp folder.  CCMClean.exe 
        is executed.  The script will block until the process completes.  After, CCMSetup.exe runs next until it completes.  
        Finally, the copied files are deleted from the target machine for housekeeping purposes. 

    Parameters:
        $computer - A string containing the name of the target computer

    Return Value:
        N/A

#########################################################################################################################>

function RemoteCCMCleanAndSetup {
    param(
        [Parameter(Mandatory=$true)]
        [String] $computer   
    )

    $copy_dest_path = "\\$computer\c$\temp\ccm"

    try {

        if((Test-Path -Path $copy_dest_path) -eq $false) { 
            New-Item -Path "\\$($_.Name)\c$\temp\" -Name "ccm" -ItemType "directory" 
        }
    
        Write-Verbose "copying $clean_network_path to temp folder: $copy_dest_path"
        Copy-Item $clean_network_path -Destination $copy_dest_path #-ErrorAction Stop
        Write-Verbose "Copy Complete"

        Write-Verbose "copying $setup_network_path to temp folder: $copy_dest_path"
        Copy-Item $setup_network_path -Destination $copy_dest_path -Recurse #-ErrorAction Stop    
        Write-Verbose "Copy Complete"

        Write-Verbose "Starting CCMClean on $computer..."
        Invoke-Command -ComputerName $computer -Credential $creds -ScriptBlock { Start-Process -FilePath $using:clean_cmd -ArgumentList $using:clean_args -wait } -ErrorAction Stop
        Write-Verbose "CCMClean Complete"

        Write-Verbose "Starting CCMSetup on $computer..."
        Invoke-Command -ComputerName $computer -Credential $creds -ScriptBlock { Start-Process -FilePath $using:setup_cmd -wait } -ErrorAction Stop
        Write-Verbose "CCMSetup Complete"
 
    } catch {
        Write-Host "RemoteCCMCleanAndSetup: Failed to complete on $($_.Name)."
        Write-Verbose "$($_)"
    
    } finally {
        Write-Verbose "Removing temp folder: $copy_dest_path..."
        Invoke-Command -ComputerName $computer -Credential $creds -ScriptBlock { Remove-Item -Path "C:\temp\ccm\" -Recurse -Force }
        Write-Verbose "Complete"
    }
}

<#########################################################################################################################

                                                    Entry Point

#########################################################################################################################>

foreach($collection in $inclusion_list) { 
    RunOnAllComputersInCollection -CollectionName $collection -Function $Function:RemoteCCMCleanAndSetup 
}
